configs:
  cm:
    admin.enabled: "false"
    kustomize.buildOptions: --enable-helm --enable-exec --enable-alpha-plugins
    url: https://argocd.sjoedin.se
    dex.config: |
        connectors:
        - config:
            issuer: https://authentik.sjoedin.se/application/o/argocd/
            clientID: $dex.authentik.clientID
            clientSecret: $dex.authentik.clientSecret
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
          name: authentik
          type: oidc
          id: authentik
  secret:
    extra:
      dex.authentik.clientID: "{{ .ARGO_CD_CLIENT_ID }}"
      dex.authentik.clientSecret: "{{ .ARGO_CD_CLIENT_SECRET }}"
  rbac:
    policy.csv: |
      g, ArgoCD Admins, role:admin

repoServer:
  initContainers:
    - name: external-secrets-transformer-installer
      image: alpine:3.18.3
      imagePullPolicy: IfNotPresent
      command:
        - sh
        - -c
        - |
          # Download external-secrets-transformer
          wget https://github.com/JonasKop/external-secrets-transformer/releases/download/0.4.1/external-secrets-transformer-linux-amd64
          install -m 0755 external-secrets-transformer-linux-amd64 /custom-tools/external-secrets-transformer

      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  volumes:
    - name: custom-tools
      emptyDir: {}
  volumeMounts:
    - mountPath: /usr/local/bin/external-secrets-transformer
      subPath: external-secrets-transformer
      name: custom-tools

server:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    enabled: true
    hostname: "argocd.sjoedin.se"
    tls: true
